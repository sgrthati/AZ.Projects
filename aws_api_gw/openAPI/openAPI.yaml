openapi: 3.0.0
info:
  title: AWS API
  description: A free fake online REST API for testing and prototyping.
  version: 1.0.0
servers:
  - url: https://jsonplaceholder.typicode.com
paths:
  /posts:
    get:
      summary: Get all posts
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '500':
          description: Internal server error
      x-amazon-apigateway-integration:
        uri: https://jsonplaceholder.typicode.com/posts
        httpMethod: GET
        type: HTTP
        responses:
          default:
            statusCode: '200'
            responseTemplates:
              application/json: ""
    post:
      summary: Create a new post
      requestBody:
        description: The post to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
            example:
              userId: 1
              title: "Sample Post Title"
              body: "This is a sample post body."
      responses:
        '201':
          description: Post created successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error
      x-amazon-apigateway-integration:
        uri: https://jsonplaceholder.typicode.com/posts
        httpMethod: POST
        type: HTTP
        requestTemplates:
          application/json: |
            {
              "userId": "$input.path('$.userId')",
              "title": "$input.path('$.title')",
              "body": "$input.path('$.body')"
            }
        passthroughBehavior: WHEN_NO_TEMPLATES
        responses:
          default:
            statusCode: '201'
            responseTemplates:
              application/json: ""
  /posts/{id}:
    get:
      summary: Get a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the post to retrieve
      responses:
        '200':
          description: A single post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Post not found
        '500':
          description: Internal server error
      x-amazon-apigateway-integration:
        uri: https://jsonplaceholder.typicode.com/posts/{id}
        httpMethod: GET
        type: HTTP
        requestParameters:
          integration.request.path.id: 'method.request.path.id'
        responses:
          default:
            statusCode: '200'
            responseTemplates:
              application/json: ""
    put:
      summary: Update a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the post to update
      requestBody:
        description: Updated post data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
            example:
              userId: 1
              title: "Updated Post Title"
              body: "This is the updated post body."
      responses:
        '200':
          description: Post updated successfully
        '400':
          description: Bad request
        '404':
          description: Post not found
        '500':
          description: Internal server error
      x-amazon-apigateway-integration:
        uri: https://jsonplaceholder.typicode.com/posts/{id}
        httpMethod: PUT
        type: HTTP
        requestParameters:
          integration.request.path.id: 'method.request.path.id'
        requestTemplates:
          application/json: |
            {
              "userId": "$input.path('$.userId')",
              "id": "$input.path('$.id')",
              "title": "$input.path('$.title')",
              "body": "$input.path('$.body')"
            }
        passthroughBehavior: WHEN_NO_TEMPLATES #inputs: 
        responses:
          default:
            statusCode: '200'
            responseTemplates:
              application/json: ""
    delete:
      summary: Delete a post by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the post to delete
      responses:
        '200':
          description: Post deleted successfully
        '404':
          description: Post not found
        '500':
          description: Internal server error
      x-amazon-apigateway-integration:
        uri: https://jsonplaceholder.typicode.com/posts/{id}
        httpMethod: DELETE
        type: HTTP
        requestParameters:
          integration.request.path.id: 'method.request.path.id'
        responses:
          default:
            statusCode: '200'
            responseTemplates:
              application/json: ""
components:
  schemas:
    Post:
      type: object
      properties:
        userId:
          type: integer
          description: The ID of the user who created the post
        id:
          type: integer
          description: The unique ID of the post
        title:
          type: string
          description: The title of the post
        body:
          type: string
          description: The body content of the post
